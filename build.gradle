buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath(group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true) {
            exclude group: 'trove', module: 'trove'
        }
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'kotlin'

version = '1.0'
group = 'io.github.hnosmium0001.glfwdemo'
archivesBaseName = 'glfwdemo'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20190831-1.14.3'
//     makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
//     accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                glfwdemo {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                glfwdemo {
                    source sourceSets.main
                }
            }
        }
    }
}

// Gradle doesn't seem to work with this; might be incompatible on MacOS
//import org.gradle.internal.os.OperatingSystem
//
//run {
//    if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
//        jvmArgs "-XstartOnFirstThread"
//    }
//}

repositories {
    jcenter()
    maven {
        name "CurseForge"
        url "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Curseforge Maven
    implementation "kottle:Kottle:$kottle_version"
    implementation "harmonics-core:HarmonicsCore-${mc_version}:${harmonics_core_version}:source"

//    ["gl", "glfw", "core"].each {
//        implementation("com.github.kotlin-graphics.imgui:imgui-$it:-SNAPSHOT") {
//            exclude group: "org.lwjgl"
//        }
//    }
//    implementation 'com.github.kotlin-graphics:uno-sdk:f528113bf45e43406953d6881915467d85a20881'
//    implementation 'com.github.kotlin-graphics.glm:glm:1b4ac18dd1a3c23440d3f33596688aac60bc0141'

    implementation "org.ice1000.jimgui:core:$jimgui_version"
    implementation "org.ice1000.jimgui:kotlin-dsl:$jimgui_version"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : "glfwdemo",
                "Specification-Vendor"    : "glfwdemosareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "glfwdemosareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
